/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2018-2025 Agorapulse.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'org.kordamp.gradle.groovy-project'
    id 'org.kordamp.gradle.checkstyle'
    id 'org.kordamp.gradle.codenarc'
    id 'org.kordamp.gradle.coveralls'
}

if (!project.hasProperty('mavenCentralUsername'))       ext.mavenCentralUsername            = System.getenv('SONATYPE_USERNAME') ?: '**UNDEFINED**'
if (!project.hasProperty('mavenCentralPassword'))       ext.mavenCentralPassword            = System.getenv('SONATYPE_PASSWORD') ?: '**UNDEFINED**'
if (!project.hasProperty('signingInMemoryKeyId'))       ext.signingInMemoryKeyId            = System.getenv('SIGNING_KEY_ID') ?: '**UNDEFINED**'
if (!project.hasProperty('signingInMemoryKeyPassword')) ext.signingInMemoryKeyPassword      = System.getenv('SIGNING_PASSWORD') ?: '**UNDEFINED**'
if (!project.hasProperty('signingInMemoryKey'))         ext.signingInMemoryKey              = System.getenv('SIGNING_SECRET_KEY_PATH') ? rootProject.file(System.getenv('SIGNING_SECRET_KEY_PATH')).text : '**UNDEFINED**'

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name        = 'Agorapulse Testing Libraries'
        vendor      = 'Agorapulse'
        description = 'Set of useful testing libraries'

        links {
            website      = "https://github.com/${slug}"
            issueTracker = "https://github.com/${slug}/issues"
            scm          = "https://github.com/${slug}.git"
        }

        people {
            person {
                id    = 'musketyr'
                name  = 'Vladimir Orany'
                roles = ['developer']
            }
        }

        repositories {
            repository {
                name = 'localRelease'
                url  = "${project.rootProject.buildDir}/repos/local/release"
            }
            repository {
                name = 'localSnapshot'
                url  = "${project.rootProject.buildDir}/repos/local/snapshot"
            }
        }
    }

    licensing {
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    publishing {
        enabled = false
        signing {
            enabled = false
        }
    }

    artifacts {
        source {
            enabled = false
        }
    }

    docs {
        javadoc {
            enabled = false
        }
    }

    quality {
        checkstyle {
            toolVersion = '8.27'
        }

        codenarc {
            toolVersion = '1.5'
        }
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/release"  }
        maven { url "https://repo.grails.org/grails/core" }
    }

    license {
        exclude '**/*.json'
        exclude '**/*.txt'
        exclude '***.yml'
        exclude '**/FixtSpec/*.*'
        exclude '**/ReferenceClass/*.*'
    }
}

subprojects { Project subproject ->
    if (subproject.name == 'guide') return

    apply plugin: 'groovy'
    apply plugin: 'com.vanniktech.maven.publish'

    targetCompatibility = JavaVersion.VERSION_1_8
    sourceCompatibility = JavaVersion.VERSION_1_8

    test {
        systemProperty 'TEST_RESOURCES_FOLDER', new File(subproject.projectDir, 'src/test/resources').canonicalPath
        systemProperty 'user.timezone', 'UTC'
        systemProperty 'user.language', 'en'
    }

    task cleanOut(type: Delete) {
        delete file('out')
    }

    clean.dependsOn cleanOut

    mavenPublishing {
        publishToMavenCentral(true)
        signAllPublications()

        pom {
            name = "Agorapulse Testing Libraries"
            description = 'Set of useful testing libraries'
            inceptionYear = "2018"
            url = "https://github.com/agorapulse/testing-libraries"
            licenses {
                license {
                    name = "The Apache License, Version 2.0"
                    url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                }
            }
            developers {
                developer {
                    id = "musketyr"
                    name = "Vladimir Orany"
                    url = "https://github.com/musketyr/"
                }
            }
            scm {
                url = "https://github.com/agorapulse/testing-libraries.git"
                connection = "scm:git:git://github.com/agorapulse/testing-libraries.git"
                developerConnection = "scm:git:ssh://git@github.com/agorapulse/testing-libraries.git"
            }
        }
    }

    signing {
        useInMemoryPgpKeys(rootProject.ext.signingInMemoryKey, rootProject.ext.signingInMemoryKeyPassword)
        sign publishing.publications
    }
}

check.dependsOn('aggregateCheckstyle', 'aggregateCodenarc', 'aggregateAllTestReports', 'coveralls')
